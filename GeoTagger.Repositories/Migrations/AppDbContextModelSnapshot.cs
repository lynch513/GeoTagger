// <auto-generated />
using System;
using GeoTagger.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GeoTagger.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GeoTagger.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GeoTagger.Models.Tag", b =>
                {
                    b.OwnsOne("GeoTagger.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("TagId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("TagId");

                            b1.ToTable("Tags");

                            b1.WithOwner()
                                .HasForeignKey("TagId");

                            b1.OwnsOne("GeoTagger.Models.GeoObject", "Block", b2 =>
                                {
                                    b2.Property<Guid>("AddressTagId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Prefix")
                                        .HasColumnType("boolean");

                                    b2.HasKey("AddressTagId");

                                    b2.ToTable("Tags");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressTagId");

                                    b2.OwnsOne("GeoTagger.Models.GeoType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("GeoObjectAddressTagId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Reduction")
                                                .HasColumnType("text");

                                            b3.HasKey("GeoObjectAddressTagId");

                                            b3.ToTable("Tags");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoObjectAddressTagId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.OwnsOne("GeoTagger.Models.GeoObject", "City", b2 =>
                                {
                                    b2.Property<Guid>("AddressTagId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Prefix")
                                        .HasColumnType("boolean");

                                    b2.HasKey("AddressTagId");

                                    b2.ToTable("Tags");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressTagId");

                                    b2.OwnsOne("GeoTagger.Models.GeoType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("GeoObjectAddressTagId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Reduction")
                                                .HasColumnType("text");

                                            b3.HasKey("GeoObjectAddressTagId");

                                            b3.ToTable("Tags");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoObjectAddressTagId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.OwnsOne("GeoTagger.Models.GeoObject", "House", b2 =>
                                {
                                    b2.Property<Guid>("AddressTagId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Prefix")
                                        .HasColumnType("boolean");

                                    b2.HasKey("AddressTagId");

                                    b2.ToTable("Tags");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressTagId");

                                    b2.OwnsOne("GeoTagger.Models.GeoType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("GeoObjectAddressTagId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Reduction")
                                                .HasColumnType("text");

                                            b3.HasKey("GeoObjectAddressTagId");

                                            b3.ToTable("Tags");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoObjectAddressTagId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.OwnsOne("GeoTagger.Models.GeoObject", "Room", b2 =>
                                {
                                    b2.Property<Guid>("AddressTagId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Prefix")
                                        .HasColumnType("boolean");

                                    b2.HasKey("AddressTagId");

                                    b2.ToTable("Tags");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressTagId");

                                    b2.OwnsOne("GeoTagger.Models.GeoType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("GeoObjectAddressTagId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Reduction")
                                                .HasColumnType("text");

                                            b3.HasKey("GeoObjectAddressTagId");

                                            b3.ToTable("Tags");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoObjectAddressTagId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.OwnsOne("GeoTagger.Models.GeoObject", "State", b2 =>
                                {
                                    b2.Property<Guid>("AddressTagId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Prefix")
                                        .HasColumnType("boolean");

                                    b2.HasKey("AddressTagId");

                                    b2.ToTable("Tags");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressTagId");

                                    b2.OwnsOne("GeoTagger.Models.GeoType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("GeoObjectAddressTagId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Reduction")
                                                .HasColumnType("text");

                                            b3.HasKey("GeoObjectAddressTagId");

                                            b3.ToTable("Tags");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoObjectAddressTagId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.OwnsOne("GeoTagger.Models.GeoObject", "Street", b2 =>
                                {
                                    b2.Property<Guid>("AddressTagId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Prefix")
                                        .HasColumnType("boolean");

                                    b2.HasKey("AddressTagId");

                                    b2.ToTable("Tags");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressTagId");

                                    b2.OwnsOne("GeoTagger.Models.GeoType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("GeoObjectAddressTagId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Reduction")
                                                .HasColumnType("text");

                                            b3.HasKey("GeoObjectAddressTagId");

                                            b3.ToTable("Tags");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoObjectAddressTagId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.Navigation("Block");

                            b1.Navigation("City")
                                .IsRequired();

                            b1.Navigation("House")
                                .IsRequired();

                            b1.Navigation("Room");

                            b1.Navigation("State");

                            b1.Navigation("Street")
                                .IsRequired();
                        });

                    b.OwnsOne("GeoTagger.Models.GeoCoord", "Coord", b1 =>
                        {
                            b1.Property<Guid>("TagId")
                                .HasColumnType("uuid");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision");

                            b1.HasKey("TagId");

                            b1.ToTable("Tags");

                            b1.WithOwner()
                                .HasForeignKey("TagId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Coord")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
